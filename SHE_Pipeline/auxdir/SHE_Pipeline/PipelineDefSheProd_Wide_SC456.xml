<?xml version="1.0" encoding="UTF-8"?>
<tsk1:PipelineDef xmlns:sys="http://euclid.esa.org/schema/sys"
    xmlns:dss="http://euclid.esa.org/schema/sys/dss"
    xmlns:tsk="http://euclid.esa.org/schema/sys/tsk"
    xmlns:tsk1="http://euclid.esa.org/schema/interfaces/sys/tsk"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://euclid.esa.org/schema/interfaces/sys/tsk">
    <Id>PS_DEV_SHEPROD_Wide_03052018</Id> <!-- ID processed by CODEEN Script with pattern from the Schema -->
    <PipelineVersion>1.0</PipelineVersion>
    <ArchiveProcessingFlag>PROCESSING_ONLY</ArchiveProcessingFlag> <!--This new flag is used by IAL/EAS to specify if this pipeline is a EAS pipeline (AF) or a PF pipeline (default is : PROCESSING_ONLY)   -->
    <PipelineContext>PipelineSC456</PipelineContext>
    <PipelineScriptName>/cvmfs/euclid.in2p3.fr/CentOS7/EDEN-2.0/opt/euclid/Pipeline/0.2.1/PF_SHE_Prod_Wide.py</PipelineScriptName>
    <InputDataSet>
        <QueryDefinition>
            <InputDataPlan>
                <DataProductType>dpdVisCalibratedFrame</DataProductType>
                <InputQuerySpecPlan type="SQLLike"> <!-- Type of the Query to be agreed with Andrey depending on the complexity of the query that could be a  SQL or a Python function -->
                    <Id>VisCalibratedFrame_2018-23-02</Id>  <!-- The Id is assigned by EAS when the plan is created into EAS, not by the user as this query is defined at run time -->                  
                    <Query>dpdVisCalibratedFrame.Data.ObservationSequence.FieldId=="UNKNOWN"</Query>
                </InputQuerySpecPlan> <!-- COORS UI to select Observation ID for VisCalibratedFrame selection -->
                <InputQuerySpecPlan type="SQLLike">
                    <Id>VisCalibIdTemporalQuery_2018-23-02</Id>                  
                    <Query>DpdVisCalibratedFrame.Header.CreationDate BETWEEN ('UNKNOWN') AND ('UNKNOWN')</Query>
                </InputQuerySpecPlan> <!-- COORS UI to select Date Beg and date End for VisCalibratedFrame selection -->
                <!--Does SHE require a query for spatial footprint?-->
                <InputQuerySpecPlan type="SQLLike">
                    <Id>VisCategoryQuery_2018-23-02</Id>
                    <Query>DpdVisCalibratedFrame.Data.ImgType.Category == "SCIENCE"</Query>
                </InputQuerySpecPlan> <!-- To avoid retrieval of calib images to be selective in the query (default clause mentioned by Andrey) -->
                <InputQuerySpecPlan type="SQLLike">
                    <Id>VisCalibIdThirdTypeQuery_2018-23-02</Id>
                    <Query>DpdVisCalibratedFrame.Data.ImgType.ThirdType == "WIDE"</Query>
                </InputQuerySpecPlan> <!-- default clause mentioned -->                
                <InputPortName>vis_image</InputPortName>
                <Cardinality>
                    <Optionality>MANDATORY</Optionality> <!-- fails if no dpdVisCalibratedFrame is returned so no need to run from IAL -->
                    <Min>1</Min> <!-- Can be run on just 1, if that's all that's available -->
                    <Max>4</Max>  
                </Cardinality>
            </InputDataPlan>
            
            <InputDataPlan>
                <DataProductType>dpdVisStackedFrame</DataProductType>
                 <InputPortName>vis_stacked_image</InputPortName>
                <Cardinality>
                    <Optionality>MANDATORY</Optionality> <!-- fails if no dpdVisStackedFrame is returned so no need to run from IAL -->
                    <Min>1</Min>
                    <Max>1</Max>  
                </Cardinality>
            </InputDataPlan>   
						
            <InputDataPlan>
                <DataProductType>DpdMerFinalCatalog</DataProductType>
				<!--extraction of NIR fluxes YJH-->
                <InputPortName>mer_catalog</InputPortName>
                <Cardinality>
                    <Optionality>MANDATORY</Optionality> <!-- fails if no DpdMerFinalCatalog is returned so no need to run from IAL -->
                    <Min>1</Min>
                    <Max>9</Max>  <!-- Up to 9 tiles can intersect an observation -->
                </Cardinality>
            </InputDataPlan>
            <!--WARNING : SHE DOES NOT WANT PIPELINE TO RUN IF MISSING TILE SPATIAL COVERAGE OF OBSERVATION!!!--> 

            <InputDataPlan>
                <DataProductType>dpdMerSegmentationMap</DataProductType>
                <!--extraction of NIR fluxes YJH-->
                <InputPortName>mer_segmentation_map</InputPortName>
                <Cardinality>
                    <Optionality>MANDATORY</Optionality> <!--fails if no MerSegmentationMap is returned so no need to run from IAL -->
                    <Min>1</Min>
                    <Max>9</Max>  <!-- Up to 9 tiles can intersect an observation -->
                </Cardinality>
            </InputDataPlan>            
            
            <InputDataPlan>
                <DataProductType>DpdPhzPfOutputCatalog</DataProductType>
                <!--Joint PDFs of the PHZs & SEDs-->
                <InputPortName>TBC</InputPortName>
                <Cardinality>
                    <Optionality>OPTIONAL</Optionality><!--for SC456 leave as optional-->
                    <Min>1</Min>
                    <Max>9</Max>  <!-- Up to 9 tiles can intersect an observation -->
                </Cardinality>
            </InputDataPlan>
            <!--I've asked PHZ to confirm whether there catalog is by field or tile, TBC-->            
            
            <InputDataPlan>
                <DataProductType>DpdSpePfOutputCatalog</DataProductType>
                <!--Galaxy & stellar spectra for colour dependent PSF corrections-->
                <InputPortName>TBC</InputPortName>
                <Cardinality>
                    <Optionality>OPTIONAL</Optionality><!--for SC456 leave as optional-->
                    <Min>1</Min>
                    <Max>9</Max>  <!-- Up to 9 tiles can intersect an observation -->
                </Cardinality>
            </InputDataPlan>   
            <!--I've asked SPE to confirm whether there catalog is by field or tile, TBC-->            
                        
            <!-- Placeholder for EXT HST data not available during SC456 -->
            
            <InputDataPlan>
                <DataProductType>dpdShearKSBTraining</DataProductType>
                <InputQuerySpecPlan type="SQLLike">
                    <Id>ShearKSBTraining_2018-23-02</Id>  <!-- The Id is assigned by EAS when the plan is created into EAS, not by the user as this query is defined at run time -->                  
                    <Query>dpdShearKSBTraining.Header.ProductId.ObjectId=="UNKNOWN"</Query>
                </InputQuerySpecPlan> <!-- COORS UI to select the unique Id of the masterBias -->
                <InputPortName>ksb_training_data</InputPortName>
                <Cardinality>
                    <Optionality>MANDATORY</Optionality>
                    <Min>1</Min>
                    <Max>1</Max>
                </Cardinality>
            </InputDataPlan>
            
            <InputDataPlan>
                <DataProductType>dpdShearLensMCTraining</DataProductType>
                <InputQuerySpecPlan type="SQLLike"> <!-- Type of the Query to be agreed with Andrey depending on the complexity 
            of the query that could be a  SQL or a Python function -->
                    <Id>ShearLensMCTraining_2018-23-02</Id>  <!-- The Id is assigned by EAS when the plan is created into EAS, not by the user as this query is defined at run time -->                  
                    <Query>dpdShearLensMCTraining.Header.ProductId.ObjectId=="UNKNOWN"</Query>
                </InputQuerySpecPlan> <!-- COORS UI to select the unique Id of the masterBias -->
                <InputPortName>lensmc_training_data</InputPortName>
                <Cardinality>
                    <Optionality>MANDATORY</Optionality>
                    <Min>1</Min>
                    <Max>1</Max>
                </Cardinality>
            </InputDataPlan>

            <InputDataPlan>
                <DataProductType>dpdRegaussTraining</DataProductType>
                <InputQuerySpecPlan type="SQLLike"> <!-- Type of the Query to be agreed with Andrey depending on the complexity 
            of the query that could be a  SQL or a Python function -->
                    <Id>RegaussTraining_2018-23-02</Id>  <!-- The Id is assigned by EAS when the plan is created into EAS, not by the user as this query is defined at run time -->                  
                    <Query>dpdRegaussTraining.Header.ProductId.ObjectId=="UNKNOWN"</Query>
                </InputQuerySpecPlan> <!-- COORS UI to select the unique Id of the masterBias -->
                <InputPortName>regauss_training_data</InputPortName>
                <Cardinality>
                    <Optionality>MANDATORY</Optionality>
                    <Min>1</Min>
                    <Max>1</Max>
                </Cardinality>
            </InputDataPlan>
            
            <InputDataPlan>
                <DataProductType>dpdShearBFDTraining</DataProductType>
                <InputQuerySpecPlan type="SQLLike"> <!-- Type of the Query to be agreed with Andrey depending on the complexity 
            of the query that could be a  SQL or a Python function -->
                    <Id>ShearBFDTraining_2018-23-02</Id>  <!-- The Id is assigned by EAS when the plan is created into EAS, not by the user as this query is defined at run time -->                  
                    <Query>dpdShearBFDTraining.Header.ProductId.ObjectId=="UNKNOWN"</Query>
                </InputQuerySpecPlan> <!-- COORS UI to select the unique Id of the masterBias -->
                <InputPortName>bfd_training_data</InputPortName>
                <Cardinality>
                    <Optionality>OPTIONAL</Optionality><!--for SC456 leave as optional-->
                    <Min>1</Min>
                    <Max>1</Max>
                </Cardinality>
            </InputDataPlan>
            
            <InputDataPlan>
                <DataProductType>dpdShearMomentsMLTraining</DataProductType>
                <InputQuerySpecPlan type="SQLLike"> <!-- Type of the Query to be agreed with Andrey depending on the complexity 
            of the query that could be a  SQL or a Python function -->
                    <Id>ShearMomentsMLTraining_2018-23-02</Id>  <!-- The Id is assigned by EAS when the plan is created into EAS, not by the user as this query is defined at run time -->                  
                    <Query>dpdShearMomentsMLTraining.Header.ProductId.ObjectId=="UNKNOWN"</Query>
                </InputQuerySpecPlan> <!-- COORS UI to select the unique Id of the masterBias -->
                <InputPortName>momentsml_training_data</InputPortName>
                <Cardinality>
                    <Optionality>OPTIONAL</Optionality><!--for SC456 leave as optional-->
                    <Min>1</Min>
                    <Max>1</Max>
                </Cardinality>
            </InputDataPlan>

           <Dependencies>
               <!--the following dependancy ensures that the FieldId of the dpdVisStackedFrame matches that of the dpdVisCalibratedFrame--> 
               <LinkedBy type="SQLLike">
                   <Id>VIS-CAL-FRAME_VIS-STACKED-FRAME_FIELDID</Id>
                   <Query>dpdVisCalibratedFrame.Data.ObservationSequence.FieldId == dpdVisStackedFrame.Data.FieldId</Query>
               </LinkedBy>

               <!-- the following dependency allows to select the DpdMerFinalCatalog intersects the polygon of the dpdVisStackedFrame-->
               <LinkedBy type="SQLLike">
					<Id>VIS_MER_INTERSECTS</Id>
                   <Query>dpdVisStackedFrame.Data.ImgSpatialFootprint.Polygon INTERSECTS DpdMerFinalCatalog.Data.CatalogCoverage.SpatialCoverage.Polygon</Query>
				</LinkedBy>
               
               <!-- the following dependency ensures that the TileIndex of the dpdMerSegmentationMap matches that of the DpdMerFinalCatalogallows to select the DpdMerFinalCatalog-->
               <LinkedBy type="SQLLike">
                   <Id>MER-FINAL-CATALOG_MER-SEG-MAP_TILE-INDEX</Id>
                   <Query>DpdMerFinalCatalog.Data.TileIndex == dpdMerSegmentationMap.Data.TileIndex</Query>
               </LinkedBy>
               
               <!-- the following dependency allows to select the DpdPhzPfOutputCatalog intersects the polygon of the dpdVisStackedFrame-->
               <LinkedBy type="SQLLike">
                   <Id>VIS_PHZ_INTERSECTS</Id>
                   <Query>dpdVisStackedFrame.Data.ImgSpatialFootprint.Polygon INTERSECTS DpdPhzPfOutputCatalog.Data.CatalogCoverage.SpatialCoverage.Polygon</Query>
               </LinkedBy>
               
               <!-- the following dependency allows to select the DpdSpePfOutputCatalog intersects the polygon of the dpdVisStackedFrame-->
               <LinkedBy type="SQLLike">
                   <Id>VIS_SPE_INTERSECTS</Id>
                   <Query>dpdVisStackedFrame.Data.ImgSpatialFootprint.Polygon INTERSECTS DpdSpePfOutputCatalog.Data.CatalogCoverage.SpatialCoverage.Polygon</Query>
               </LinkedBy>
			</Dependencies>
        </QueryDefinition>
    </InputDataSet> 
    <EdenVersion>2.0</EdenVersion>
    <CommonDataModelVersion>2.0</CommonDataModelVersion>
</tsk1:PipelineDef>